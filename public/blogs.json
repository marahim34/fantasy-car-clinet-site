[
  {
    "picture": "https://miro.medium.com/max/1400/1*mjbPUUeSgPTgg3M1gic_xA.png",
    "name": "Ruiz Curry",
    "date": "2022-09-25",
    "title": "What are the different ways to manage a state in a React application?",
    "about": "In modern React, we build our applications with functional components. Components are themselves JavaScript functions, independent and reusable bits of code. \\n The state is an object that holds information about a certain component. Plain JavaScript functions don't have the ability to store information. The code within them executes and dissapears once the execution is finished. \\n In React apps, there are at least seven ways to handle the state. Let us briefly explore a few of them in this part. \\n\\n URL\\n a. We can use URL to store some data e.g. \\n b.The id of the current item, being viewed \\n c.Filter parameters \\n d.Pagination offset and limit \\n Sorting data\\n\\n Web Storage\\n The second option is to store the state in the browser via web storage. This is useful when we want to persist state between reloads and reboots. Examples include cookies, local storage, and IndexedDB. These are native browser technologies. \\n Data persisted in the browser is tied to a single browser. So, if the user loads the site in a different browser, the data will not be available. \\n Lifted State\\n\\nThe Fourth option is to define the state in the parent component. Often, the same state is used across multiple components. In those cases, it is useful to lift the state to a common parent. The lifting state is a two step process. First, we declare the state in a common parent component, and then we pass the state down to child components via props. This pattern should be considered any time a few related components need to use the same state. The lifting state avoids duplicating states in multiple components. It helps to assure that our components all consistently reflect the same state. \\n Derived State\\n\\n The fifth option is to compute the new state based on the available state and we do not need to declare a state at all. If there are existing values that can be composed to give us the information we need, then we can calculate that information on each render instead of storing it. Some examples include calling .length on an array to determine the number of records instead of storing a separate numItems variable in the state or deriving an errorsExist boolean by checking if the errors array is empty.\r\n"
  },
  {
    "picture": "https://media.geeksforgeeks.org/wp-content/uploads/20200520193336/Untitled-Diagram108.png",
    "name": "Marcus Ramirez",
    "date": "2022-08-25",
    "title": "How does prototypical inheritance work?",
    "about": "JavaScript objects are dynamic bags of properties (referred to as own properties). JavaScript objects have a link to a prototype object. When trying to access a property of an object, the property will not only be sought on the object but on the prototype of the object, the prototype of the prototype, and so on until either a property with a matching name is found or the end of the prototype chain is reached. \\n Every object with its methods and properties contains an internal and hidden property known as [[Prototype]]. The Prototypal Inheritance is a feature in javascript used to add methods and properties in objects. It is a method by which an object can inherit the properties and methods of another object. Traditionally, in order to get and set the [[Prototype]] of an object, we use Object.getPrototypeOf and Object.setPrototypeOf. Nowadays, in modern language, it is being set using __proto__. /r/n,"
  },
  {
    "picture": "https://i.ibb.co/GFXs2xc/javascript-vs-nodejs.png",
    "name": "Roberto Charlos",
    "date": "2022-07-25",
    "title": "What is a unit test? Why should we write unit tests?",
    "about": "Unit testing is a software development process in which the smallest testable parts of an application, called units, are individually and independently scrutinized for proper operation. This testing methodology is done during the development process by the software developers and sometimes QA staff.  The main objective of unit testing is to isolate written code to test and determine if it works as intended. \\n Unit testing is a component of test-driven development (TDD), a pragmatic methodology that takes a meticulous approach to building a product by means of continual testing and revision. This testing method is also the first level of software testing, which is performed before other testing methods such as integration testing. Unit tests are typically isolated to ensure a unit does not rely on any external code or functions. Testing can be done manually but is often automated. \r\n,"
  },
  {
    "picture": "https://i.ibb.co/KwCNbMq/nodejs.png",
    "name": "Christiano Ronaldinho",
    "date": "2022-06-25",
    "title": "React vs. Angular vs. Vue?",
    "about": "Angular\\n\\nAngular is a TypeScript-based JavaScript framework created by the Angular Team at Google in September 2016. Based on an earlier iteration called AngularJS that the same group of developers released in 2010, the Angular Framework continues to be maintained by Google as it has recently reached its fourteenth version. \\n Angular is the perfect choice for those who wish to create refined Single Page Applications (SPA). The framework’s two-way data binding, which automatically synchronizes the data between the database and the client and eases the development process, is another reason to prefer creating Angular applications. While it’s free and open-source and can be used for both mobile and web apps, Angular works better for more complex applications. Therefore, Angular may be better for experienced developers than beginners. \\n Google, Microsoft Office, Samsung, PayPal, Wix, and Forbes are among the major companies that rely on Angular. \\n\\nReact? \\n\\n React is the most popular front-end JavaScript framework of today. It was created by Jordan Walke, a software engineer at Facebook (recently rebranded as Meta), in 2011 under FaxJs. Best used for designing dynamic and interactive user interfaces (UI). While its current stable version is 18.x, React is maintained by Meta along with a large community of developers and companies. \\n Vue\\n\\n Vue is another open-source JS Framework created by former Google employee Evan You in February 2014, mainly for building User Interfaces (UI) and Single Page Applications (SPA). \\nVue combines two essential aspects of its rivals: Angular’s two-way data binding and React’s virtual DOM. Free and open-source like the others, Vue distinguishes itself as a flexible and lightweight framework. \\n Although Vue is the least popular framework of the trio, its popularity is on the rise thanks to its simple, fast, and straightforward design. Naturally a fitting framework for inexperienced developers, you can quickly improve your Vue skills with proper documentation and create well-organized interactive tours beneficial to user onboarding. \\n One of the most significant downsides of Vue is that it has not joined the mainstream and paves the way for fewer job opportunities, though companies like Adobe, Alibaba, GitLab, and Grammarly deploy Vue for the front-end development of their apps. \r\n"
  }
]
